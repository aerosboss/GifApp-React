{"version":3,"sources":["components/AddCategory.js","generalFunctions/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","event","preventDefault","category","type","value","placeholder","onChange","target","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGif","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"iMAIaA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAAiB,EACNC,mBAAS,IADH,mBACnCC,EADmC,KACvBC,EADuB,KAe1C,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAMC,iBAENJ,GAAcF,GAAa,SAACO,GAAD,OAAeL,GAAf,mBAA8BK,OACzDJ,EAAc,MAMV,2BACIK,KAAK,OACLC,MAAOP,EACPQ,YAAY,gCACZC,SAlBc,SAACN,GACvBF,EAAcE,EAAMO,OAAOH,Y,uBCRtBI,EAAO,uCAAG,WAAMN,GAAN,uBAAAO,EAAA,6DACbC,EADa,0FAC4EC,UAAUT,GADtF,sBAEAU,MAAOF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAACC,GAAS,IAAD,EAC5B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCKHO,EAAU,SAAC,GAAgB,IAAfzB,EAAc,EAAdA,SAAc,ECTZ,SAACA,GAAc,IAAD,EAEXN,mBAAS,CAC/BmB,KAAM,GACNa,SAAS,IAJwB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAoBrC,OAbAC,qBAAW,WACNvB,EAAQN,GACR8B,MAAM,SAACX,GAEJS,EAAS,CACLf,KAAMM,EACNO,SAAS,SAIlB,CAAC1B,IAGG2B,EDPwBI,CAAY/B,GAA/BmB,EAJuB,EAI5BN,KAAaa,EAJe,EAIfA,QASpB,OACI,oCACI,wBAAIJ,UAAU,qCAAqCtB,GACjD0B,GAAW,uBAAGJ,UAAU,oCAAb,eAEb,yBAAKA,UAAU,aAEPH,EAAOJ,KAAK,SAACC,GAAD,OACR,kBAAC,EAAD,eACIgB,IAAKhB,EAAIC,IACLD,UEXjBiB,EAnBM,WAAO,IAAD,EAEWvC,mBAAS,CAAC,gBAFrB,mBAEhBwC,EAFgB,KAEJzC,EAFI,KAIvB,OACA,oCACI,8CACA,kBAAC,EAAD,CAAaA,YAAaA,IAC1B,6BACKyC,EAAWnB,KAAK,SAACf,GAAD,OACb,kBAAC,EAAD,CACIgC,IAAKhC,EACLA,SAAUA,S,MCZ9BmC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.2ffd2474.chunk.js","sourcesContent":["import React, { useState } from 'react' // snippet rafc\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({setCategory}) => {\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n    const handleInputChange = (event) => {\r\n        setInputValue(event.target.value);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        \r\n        inputValue && setCategory( (category) => [inputValue, ...category] );\r\n        setInputValue('');\r\n    }\r\n    \r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                placeholder=\"Escribe algo para buscar Gifs\"\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategory: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=c7EFbbFChM5O5MEjQi0m1dwUicXsVsh5&q=${encodeURI(category)}&limit=10`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( (img) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    } )\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","/*\r\nCustom hook se utiliza para extraer logaica de un componente y reutilizarla.\r\nLos hooks creados por el desarrollador se suele colocar dentro de la carpeta src/hooks\r\ny sus nombres empiezan por use, ejemplo useMiHook.js\r\nPueden tener estado, efectos, etc....\r\n*/\r\n\r\nimport React from 'react'\r\nimport { useFetchGif } from '../hooks/useFetchGif'\r\nimport { GifGridItem } from './GifGridItem';\r\n// import { getGifs } from '../generalFunctions/getGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    const {data:images, loading} = useFetchGif(category);\r\n    \r\n    // useEffect( () => {\r\n    //     getGifs(category)\r\n    //         .then( (gif) => setImages(gif)); // === .then( setImages );\r\n    // }, [category] )\r\n\r\n\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            { loading && <p className=\"animate__animated animate__flash\">Cargando...</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( (img) => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ) ) \r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../generalFunctions/getGifs'\r\n\r\nexport const useFetchGif = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( () => {\r\n         getGifs(category)\r\n        .then( (images) => {\r\n\r\n            setState({\r\n                data: images,\r\n                loading: false\r\n            });\r\n            \r\n        })\r\n    }, [category])\r\n\r\n   \r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategory] = useState(['bob esponja']);\r\n\r\n    return (\r\n    <>\r\n        <h2> GifExpertApp </h2>\r\n        <AddCategory setCategory={setCategory}/>\r\n        <hr/>\r\n            {categories.map( (category) => \r\n                <GifGrid\r\n                    key={category}\r\n                    category={category}\r\n                />    \r\n            )}\r\n    </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}